name: Automatic Release and Publish

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      pull_request_number: ${{ steps.release.outputs.pull_request_number }}
    steps:
      - name: Generate Release PR and Version
        id: release
        uses: googleapis/release-please-action@v4
        with:
          # Using a PAT is more reliable for permissions.
          # Ensure you have a secret named RELEASE_PLEASE_PAT in your repo settings.
          token: ${{ secrets.RELEASE_PLEASE_PAT }}
          release-type: go

      - name: Merge the release PR
        if: ${{ steps.release.outputs.pull_request_number }}
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: "${{ secrets.RELEASE_PLEASE_PAT }}"
          MERGE_METHOD: "squash"
          PULL_REQUEST: "${{ steps.release.outputs.pull_request_number }}"
          MERGE_LABELS: ""

  build-and-publish:
    needs: release-please
    if: needs.release-please.outputs.release_created == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Match the go.mod version

      - name: Tidy Go Modules
        run: go mod tidy

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/cdn-speed-test
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build binaries for different platforms
        run: |
          mkdir -p release
          GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o release/cdn-speed-test-linux-amd64 ./cmd/cdn-speed-test
          GOOS=windows GOARCH=amd64 go build -ldflags="-w -s" -o release/cdn-speed-test-windows-amd64.exe ./cmd/cdn-speed-test
          GOOS=darwin GOARCH=amd64 go build -ldflags="-w -s" -o release/cdn-speed-test-darwin-amd64 ./cmd/cdn-speed-test
          GOOS=darwin GOARCH=arm64 go build -ldflags="-w -s" -o release/cdn-speed-test-darwin-arm64 ./cmd/cdn-speed-test

      - name: Upload Assets to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: release/*
